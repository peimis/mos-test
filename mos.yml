platform: esp32
author: mongoose-os
description: A Mongoose OS app skeleton
version: 1.0

libs_version: ${mos.version}
modules_version: ${mos.version}
mongoose_os_version: ${mos.version}

# Optional. List of tags for online search.
tags:
  - c
  - hw
  - js

# List of files / directories with C sources. No slashes at the end of dir names.
sources:
  - src

includes:
  - include

# List of dirs. Files from these dirs will be copied to the device filesystem
filesystem:
  - fs

# Custom configuration entries, settable via "device configuration"
# Below is a custom firmware configuration example.
# Uncomment and modify according to your needs:

# config_schema:
#  - ["my_app", "o", {title: "My app custom settings"}]
#  - ["my_app.bool_value", "b", false, {title: "Some boolean value"}]
#  - ["my_app.string_value", "s", "", {title: "Some string value"}]
#  - ["my_app.int_value", "i", 123, {title: "Some integer value"}]

# These settings get compiled into the C structure, and can be accessed
# from the C code this way:
#
# printf("Hello from %s!\n", mgos_sys_config_get_device_id());
#
# Settings are cool: can be modified remotely without full firmware upgrade!
#
# To see all available compiled settings, buid the firmware and open
# build/gen/mgos_config.h file.
#
# Also, in this config_schema section, you can override existing
# settings that has been created by other libraries. For example, debug log
# level is 2 by default. For this firmware we can override it to 3:
#
# config_schema:
config_schema:
#  - ["debug.level", 3]
  - ["app.ccs811_enable", "b", false, {title: "CCS811 sensor enabled"}]
  - ["app.bme280_enable", "b", false, {title: "BME280 sensor enabled"}]
  - ["app.mpu_enable", "b", false, {title: "MPU sensor enabled"}]
  - ["app.lumen_enable", "b", false, {title: "TSL sensor enabled"}]
  - ["app.lumen_enable", "b", false, {title: "TSL sensor enabled"}]
# GPIO settings
  - ["board_gpio.powergood", 34]
  - ["board_gpio.charge_stat", 35]
  - ["board_gpio.adc_lipo", 25]
  - ["board_gpio.adc_en", 26]
  - ["board_gpio.mpu_int", 27]
  - ["board_gpio.mpu_cs", 16]
  - ["board_gpio.bme280_cs", 5]
  - ["board_gpio.ccs811_int", 14]
  - ["board_gpio.ccs811_reset", 0]
  - ["board_gpio.ccs811_wake", 13]
  - ["board_gpio.led_r", 15]
  - ["board_gpio.led_g", 2, {title: "RGB led channels shared with FET"}]
  - ["board_gpio.led_b", 4, {title: "RGB led channels shared with FET"}]
  - ["board_gpio.FET_1", 2, {title: "FET drive ch1"}]
  - ["board_gpio.FET_2", 4, {title: "FET drive ch2"}]
  - ["board_gpio.unused17", 17, {title: "A free GPIO"}]
# SPI pins
  - ["spi.mosi", 23]
  - ["spi.miso", 19]
  - ["spi.sck", 18]
# I2C pins
  - ["i2c.sda", "i", 21, {title: "The device i2c address usually 0x76 or 0x77"}]
  - ["i2c.sck", "i", 18, {title: "The device i2c address usually 0x76 or 0x77"}]


# List of libraries used by this app, in order of initialisation
libs:
  - origin: https://github.com/mongoose-os-libs/ca-bundle
  - origin: https://github.com/mongoose-os-libs/rpc-service-config
  - origin: https://github.com/mongoose-os-libs/rpc-service-fs
  - origin: https://github.com/mongoose-os-libs/rpc-uart
  - origin: https://github.com/mongoose-os-libs/rpc-service-gpio
  - origin: https://github.com/mongoose-os-libs/wifi
  - origin: https://github.com/mongoose-os-libs/pwm
  - origin: https://github.com/mongoose-os-libs/mqtt
  - origin: https://github.com/mongoose-os-libs/rpc-common
  - origin: https://github.com/mongoose-os-libs/dns-sd
  - origin: https://github.com/mongoose-os-libs/mjs
  - name: lobo-spi
  - name: lobo-tft

# Used by the mos tool to catch mos binaries incompatible with this file format
manifest_version: 2017-05-18
